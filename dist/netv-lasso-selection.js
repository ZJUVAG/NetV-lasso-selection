!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r=e();for(var n in r)("object"==typeof exports?exports:t)[n]=r[n]}}(self,(function(){return(()=>{var t={116:(t,e,r)=>{"use strict";r.r(e),r.d(e,{Lasso:()=>i});var n=r(707),s=r.n(n);class i{constructor(t,e){this.$_svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.$_core=t,t.$_container.prepend(this.$_svg),this.$_svg.setAttribute("width",t.$_configs.width),this.$_svg.setAttribute("height",t.$_configs.height),t.$_container.style.position="relative",t.$_container.style.overflow="hidden",t.$_container.style.width=t.$_configs.width,t.$_container.style.height=t.$_configs.height,this.$_svg.style.position="absolute",this.$_svg.style.overflow="visible",this.$_svg.style.pointerEvents="none",this._width=t.$_configs.width,this._height=t.$_configs.height,this._closeDistance=100,this._pathPoints=[],this._selectedItems=[],this._selectedCallback=null,this.$_svg.addEventListener("mousedown",this._onMouseDown.bind(this)),this.$_svg.addEventListener("mousemove",this._onMouseMove.bind(this)),this.$_svg.addEventListener("mouseup",this._onMouseUp.bind(this)),!0===e?.enable&&this.enable()}enable(){this.$_svg.style.pointerEvents="visible"}disable(){this.$_svg.style.pointerEvents="none"}closeDistance(t){this._closeDistance=t}onSelected(t){this._selectedCallback=t}_onMouseDown(t){this._selecting=!0,this._path=document.createElementNS("http://www.w3.org/2000/svg","path"),this._path.setAttribute("fill","rgba(200, 200, 200, 0.2)"),this._path.setAttribute("stroke","black"),this._path.setAttribute("stroke-width",2),this._path.setAttribute("stroke-linejoin","round"),this._path.setAttribute("stroke-linecap","round"),this.$_svg.appendChild(this._path);const e=t.offsetX,r=t.offsetY;this._pathPoints=[[e,r]],this._pathD=`M${e},${r}L${e},${r}`,this._path.setAttribute("d",this._pathD)}_onMouseMove(t){if(!this._selecting)return;const e=t.offsetX,r=t.offsetY;this._pathPoints.push([e,r]),this._pathD+=` ${e},${r}`,this._path.setAttribute("d",this._pathD)}_onMouseUp(t){this._path.remove(),this._getSelectedItems(),this._selectedCallback&&this._selectedCallback(this._selectedItems)}_getSelectedItems(){const t=this._pathPoints[0],e=this._pathPoints[this._pathPoints.length-1];if((t[0]-e[0])**2+(t[1]-e[1])**2>this._closeDistance*this._closeDistance)return void(this._selectedItems=[]);const r=this.$_core.nodes(),n=this.$_core.$_interactionManager.transform;this._selectedItems=r.filter((t=>{const e=t.x()*n.k+n.x,r=t.y()*n.k+n.y;return s()(this._pathPoints,[e,r])<0}))}}},146:(t,e,r)=>{"use strict";var n=r(5),s=r(740),i=r(442),o=r(972);function a(t,e){for(var r=new Array(t.length-1),n=1;n<t.length;++n)for(var s=r[n-1]=new Array(t.length-1),i=0,o=0;i<t.length;++i)i!==e&&(s[o++]=t[n][i]);return r}function h(t){if(1===t.length)return t[0];if(2===t.length)return["sum(",t[0],",",t[1],")"].join("");var e=t.length>>1;return["sum(",h(t.slice(0,e)),",",h(t.slice(e)),")"].join("")}function u(t){if(2===t.length)return[["sum(prod(",t[0][0],",",t[1][1],"),prod(-",t[0][1],",",t[1][0],"))"].join("")];for(var e=[],r=0;r<t.length;++r)e.push(["scale(",h(u(a(t,r))),",",(n=r,1&n?"-":""),t[0][r],")"].join(""));return e;var n}function l(t){for(var e=[],r=[],l=function(t){for(var e=new Array(t),r=0;r<t;++r){e[r]=new Array(t);for(var n=0;n<t;++n)e[r][n]=["m",n,"[",t-r-1,"]"].join("")}return e}(t),f=[],c=0;c<t;++c)0==(1&c)?e.push.apply(e,u(a(l,c))):r.push.apply(r,u(a(l,c))),f.push("m"+c);var v=h(e),p=h(r),_="orientation"+t+"Exact",g=["function ",_,"(",f.join(),"){var p=",v,",n=",p,",d=sub(p,n);return d[d.length-1];};return ",_].join("");return new Function("sum","prod","scale","sub",g)(s,n,i,o)}var f=l(3),c=l(4),v=[function(){return 0},function(){return 0},function(t,e){return e[0]-t[0]},function(t,e,r){var n,s=(t[1]-r[1])*(e[0]-r[0]),i=(t[0]-r[0])*(e[1]-r[1]),o=s-i;if(s>0){if(i<=0)return o;n=s+i}else{if(!(s<0))return o;if(i>=0)return o;n=-(s+i)}var a=33306690738754716e-32*n;return o>=a||o<=-a?o:f(t,e,r)},function(t,e,r,n){var s=t[0]-n[0],i=e[0]-n[0],o=r[0]-n[0],a=t[1]-n[1],h=e[1]-n[1],u=r[1]-n[1],l=t[2]-n[2],f=e[2]-n[2],v=r[2]-n[2],p=i*u,_=o*h,g=o*a,d=s*u,b=s*h,m=i*a,y=l*(p-_)+f*(g-d)+v*(b-m),w=7771561172376103e-31*((Math.abs(p)+Math.abs(_))*Math.abs(l)+(Math.abs(g)+Math.abs(d))*Math.abs(f)+(Math.abs(b)+Math.abs(m))*Math.abs(v));return y>w||-y>w?y:c(t,e,r,n)}];function p(t){var e=v[t.length];return e||(e=v[t.length]=l(t.length)),e.apply(void 0,t)}!function(){for(;v.length<=5;)v.push(l(v.length));for(var e=[],r=["slow"],n=0;n<=5;++n)e.push("a"+n),r.push("o"+n);var s=["function getOrientation(",e.join(),"){switch(arguments.length){case 0:case 1:return 0;"];for(n=2;n<=5;++n)s.push("case ",n,":return o",n,"(",e.slice(0,n).join(),");");s.push("}var s=new Array(arguments.length);for(var i=0;i<arguments.length;++i){s[i]=arguments[i]};return slow(s);}return getOrientation"),r.push(s.join(""));var i=Function.apply(void 0,r);for(t.exports=i.apply(void 0,[p].concat(v)),n=0;n<=5;++n)t.exports[n]=v[n]}()},707:(t,e,r)=>{t.exports=function(t,e){for(var r=e[0],s=e[1],i=t.length,o=1,a=i,h=0,u=i-1;h<a;u=h++){var l=t[h],f=t[u],c=l[1],v=f[1];if(v<c){if(v<s&&s<c){if(0===(g=n(l,f,e)))return 0;o^=0<g|0}else if(s===c){var p=(_=t[(h+1)%i])[1];if(c<p){if(0===(g=n(l,f,e)))return 0;o^=0<g|0}}}else if(c<v){if(c<s&&s<v){if(0===(g=n(l,f,e)))return 0;o^=g<0|0}else if(s===c){var _=t[(h+1)%i];if((p=_[1])<c){var g;if(0===(g=n(l,f,e)))return 0;o^=g<0|0}}}else if(s===c){var d=Math.min(l[0],f[0]),b=Math.max(l[0],f[0]);if(0===h){for(;u>0;){var m=(u+i-1)%i;if(($=t[m])[1]!==s)break;var y=$[0];d=Math.min(d,y),b=Math.max(b,y),u=m}if(0===u)return d<=r&&r<=b?0:1;a=u+1}for(var w=t[(u+i-1)%i][1];h+1<a;){var $;if(($=t[h+1])[1]!==s)break;y=$[0],d=Math.min(d,y),b=Math.max(b,y),h+=1}if(d<=r&&r<=b)return 0;var M=t[(h+1)%i][1];r<d&&w<s!=M<s&&(o^=1)}}return 2*o-1};var n=r(146)},442:(t,e,r)=>{"use strict";var n=r(5),s=r(359);t.exports=function(t,e){var r=t.length;if(1===r){var i=n(t[0],e);return i[0]?i:[i[1]]}var o=new Array(2*r),a=[.1,.1],h=[.1,.1],u=0;n(t[0],e,a),a[0]&&(o[u++]=a[0]);for(var l=1;l<r;++l){n(t[l],e,h);var f=a[1];s(f,h[0],a),a[0]&&(o[u++]=a[0]);var c=h[1],v=a[1],p=c+v,_=v-(p-c);a[1]=p,_&&(o[u++]=_)}return a[1]&&(o[u++]=a[1]),0===u&&(o[u++]=0),o.length=u,o}},972:t=>{"use strict";t.exports=function(t,e){var r=0|t.length,n=0|e.length;if(1===r&&1===n)return function(t,e){var r=t+e,n=r-t,s=t-(r-n)+(e-n);return s?[s,r]:[r]}(t[0],-e[0]);var s,i,o=new Array(r+n),a=0,h=0,u=0,l=Math.abs,f=t[h],c=l(f),v=-e[u],p=l(v);c<p?(i=f,(h+=1)<r&&(c=l(f=t[h]))):(i=v,(u+=1)<n&&(p=l(v=-e[u]))),h<r&&c<p||u>=n?(s=f,(h+=1)<r&&(c=l(f=t[h]))):(s=v,(u+=1)<n&&(p=l(v=-e[u])));for(var _,g,d=s+i,b=d-s,m=i-b,y=m,w=d;h<r&&u<n;)c<p?(s=f,(h+=1)<r&&(c=l(f=t[h]))):(s=v,(u+=1)<n&&(p=l(v=-e[u]))),(m=(i=y)-(b=(d=s+i)-s))&&(o[a++]=m),y=w-((_=w+d)-(g=_-w))+(d-g),w=_;for(;h<r;)(m=(i=y)-(b=(d=(s=f)+i)-s))&&(o[a++]=m),y=w-((_=w+d)-(g=_-w))+(d-g),w=_,(h+=1)<r&&(f=t[h]);for(;u<n;)(m=(i=y)-(b=(d=(s=v)+i)-s))&&(o[a++]=m),y=w-((_=w+d)-(g=_-w))+(d-g),w=_,(u+=1)<n&&(v=-e[u]);return y&&(o[a++]=y),w&&(o[a++]=w),a||(o[a++]=0),o.length=a,o}},740:t=>{"use strict";t.exports=function(t,e){var r=0|t.length,n=0|e.length;if(1===r&&1===n)return function(t,e){var r=t+e,n=r-t,s=t-(r-n)+(e-n);return s?[s,r]:[r]}(t[0],e[0]);var s,i,o=new Array(r+n),a=0,h=0,u=0,l=Math.abs,f=t[h],c=l(f),v=e[u],p=l(v);c<p?(i=f,(h+=1)<r&&(c=l(f=t[h]))):(i=v,(u+=1)<n&&(p=l(v=e[u]))),h<r&&c<p||u>=n?(s=f,(h+=1)<r&&(c=l(f=t[h]))):(s=v,(u+=1)<n&&(p=l(v=e[u])));for(var _,g,d=s+i,b=d-s,m=i-b,y=m,w=d;h<r&&u<n;)c<p?(s=f,(h+=1)<r&&(c=l(f=t[h]))):(s=v,(u+=1)<n&&(p=l(v=e[u]))),(m=(i=y)-(b=(d=s+i)-s))&&(o[a++]=m),y=w-((_=w+d)-(g=_-w))+(d-g),w=_;for(;h<r;)(m=(i=y)-(b=(d=(s=f)+i)-s))&&(o[a++]=m),y=w-((_=w+d)-(g=_-w))+(d-g),w=_,(h+=1)<r&&(f=t[h]);for(;u<n;)(m=(i=y)-(b=(d=(s=v)+i)-s))&&(o[a++]=m),y=w-((_=w+d)-(g=_-w))+(d-g),w=_,(u+=1)<n&&(v=e[u]);return y&&(o[a++]=y),w&&(o[a++]=w),a||(o[a++]=0),o.length=a,o}},5:t=>{"use strict";t.exports=function(t,r,n){var s=t*r,i=e*t,o=i-(i-t),a=t-o,h=e*r,u=h-(h-r),l=r-u,f=a*l-(s-o*u-a*u-o*l);return n?(n[0]=f,n[1]=s,n):[f,s]};var e=+(Math.pow(2,27)+1)},359:t=>{"use strict";t.exports=function(t,e,r){var n=t+e,s=n-t,i=e-s,o=t-(n-s);return r?(r[0]=o+i,r[1]=n,r):[o+i,n]}}},e={};function r(n){if(e[n])return e[n].exports;var s=e[n]={exports:{}};return t[n](s,s.exports,r),s.exports}return r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r(116)})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,